@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ff: <https://foerderfunke.org/default#> .
@prefix shn: <https://schemas.link/shacl-next#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

ff:schwerbehindertenausweis a ff:RequirementProfile ;
    ff:title "Schwerbehindertenausweis und Gleichstellung"@de ,
             "Severely Disabled ID and Equal Status"@en ;
    ff:category ff:gesundheit-pflege-bc-kategorie, ff:sozialhilfe-grundsicherung-bc-kategorie ;
    ff:validationStage ff:preliminary-validation ;
    ff:legalBasis ff:sgb-ix ;
    ff:administrativeLevel ff:bund ;
    ff:providingAgency ff:sozialamt ;
    ff:tag ff:bielefunke ;
    ff:benefitInfo "Menschen mit einer Behinderung haben je nach Grad der Behinderung und Arbeitsplatzsituation Anspruch auf einen Schwerbehindertenausweis oder eine Gleichstellung."@de ,
                   "People with a disability may be entitled to a severely disabled person's ID card or to equal status, depending on the degree of disability and their employment situation."@en ;
    ff:moreInfoAt <https://raw.githubusercontent.com/Citizen-Knowledge-Graph/foerderfunke-react-app/refs/heads/main/public/assets/data/requirement-profiles/requirement-profiles-hydration.json> ;
    ff:hasMainShape ff:schwerbehindertenausweisMainShape ;
    ff:hasFlowShape ff:schwerbehindertenausweisFlowShape .

# ----- EVALUATION LOGIC -----

ff:schwerbehindertenausweisMainShape a sh:NodeShape ;
    sh:targetClass ff:Citizen ;

    sh:property [ sh:path ff:disability ; sh:in (true) ] ;
    sh:property [ sh:path ff:disabilityDegreeDetermined; sh:in (true) ] ;
    sh:property [ sh:path ff:disabilityDegree ; sh:in(
        ff:disabilityDegree-50
        ff:disabilityDegree-60 
        ff:disabilityDegree-70 
        ff:disabilityDegree-80 
        ff:disabilityDegree-90 
        ff:disabilityDegree-100
    ) ] .

# ----- DECISION TREE LOGIC -----

ff:schwerbehindertenausweisFlowShape a sh:NodeShape ;
    sh:targetClass ff:Citizen ;

    sh:property ff:baseRequirements ;
    sh:property ff:degreeEvaluatedPS .

ff:baseRequirements a sh:PropertyShape ;
    sh:property [ sh:path ff:disability ; sh:minCount 1 ] ;
    sh:property [ sh:path ff:disabilityDegreeDetermined ; sh:minCount 1 ] .

ff:degreeEvaluatedPS a sh:PropertyShape ;
    sh:deactivated [
        sh:not [
            shn:eq ( [ sh:path ff:disabilityDegreeDetermined ] true ) 
        ]
    ] ;
    sh:path ff:disabilityDegree ; sh:minCount 1 .